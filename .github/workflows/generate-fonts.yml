# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Generate Fonts

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodule: recursive
      - run: sudo apt install wget
      - name: Set up Python 3.9.x
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.x

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - run: sh fetch_dump.sh
      - run: wget `curl -s https://api.github.com/repos/Radically/glyphwiki-gensvg/releases/latest | python3 -c "import sys, json; print(' '.join(list(map(lambda x: x['browser_download_url'],  json.load(sys.stdin)['assets']))))"`
      - run: gzip -d *.txt.gz
      - name: Mincho SC
        run: |
          sh clean.sh
          CONFIG=./config_mincho_single.json poetry run driver ./glyphwiki_dump/dump_newest_only.txt ./glyphwiki_mincho.txt ./perl-scripts g
          zip HanaMinLiteSC.zip {Hana*.!(otf),GlyphWiki*}
          rm {Hana*.!(otf),GlyphWiki*}

      - name: Mincho TC CJK
        run: |
          sh clean.sh
          CONFIG=./config_mincho.json poetry run driver ./glyphwiki_dump/dump_newest_only.txt ./glyphwiki_mincho.txt ./perl-scripts t
          zip HanaMinLiteCJKTC.zip {Hana*.!(otf),GlyphWiki*}
          rm {Hana*.!(otf),GlyphWiki*}

      - name: Gothic JP
        run: |
          sh clean.sh
          CONFIG=./config_gothic_single.json poetry run driver ./glyphwiki_dump/dump_newest_only.txt ./glyphwiki_gothic.txt ./perl-scripts j
          zip HanaGothLiteJP.zip {Hana*.!(otf),GlyphWiki*}
          rm {Hana*.!(otf),GlyphWiki*}

      - name: Gothic KR CJK
        run: |
          sh clean.sh
          CONFIG=./config_gothic.json poetry run driver ./glyphwiki_dump/dump_newest_only.txt ./glyphwiki_mincho.txt ./perl-scripts t
          zip HanaGothLiteCJKKR.zip {Hana*.!(otf),GlyphWiki*}
          rm {Hana*.!(otf),GlyphWiki*}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *.otf
            *.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
