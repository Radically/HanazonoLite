{"data":{"markdownRemark":{"html":"<h3>There are incorrect glyphs in my locale!</h3>\n<p><sup>N.B. I am a newcomer to GlyphWiki myself, so the observations below may not be entirely correct, and there may be exceptions to the rule given the nature of collaborative editing. I've <a href=\"https://github.com/Radically/HanazonoLite/issues/14\" target=\"_blank\" rel=\"noopener noreferrer\">created an issue here for further discussion</a> and observations on locale-specific needs.</sup></p>\n<p>In GlyphWiki, default names (e.g. <code class=\"language-text\">u7940</code>) are usually aliased to the J-source variant or even the <code class=\"language-text\">-jv</code> variant if one exists; thus <code class=\"language-text\">u7940</code> is aliased to <code class=\"language-text\">u7940-j</code>, and <code class=\"language-text\">u6eb8</code> is aliased to <code class=\"language-text\">u6eb8-jv</code> as of the time of writing, otherwise it is aliased to the primary locale from which it originates.</p>\n<p>For instance, <span class=\"large\">纷</span>, being the Simplified Chinese-exclusive variant of <span class=\"large mincho\" lang=\"ko\">紛</span>, necessarily only has a G-source glyph. <code class=\"language-text\">u7eb7</code> is thus an alias of <code class=\"language-text\">u7eb7-g</code>. Note the absence of the brief horizontal stroke in <span class=\"large bold mincho\" lang=\"zh-Hans\">八</span> compared to <span class=\"large bold mincho\" lang=\"ko\">八</span>, as well as the lack of discontinuity in <span class=\"large bold mincho\" lang=\"zh-Hans\">纟</span> vs <span class=\"large bold mincho\" lang=\"ja\">糸</span>, which are <a href=\"https://en.wikipedia.org/wiki/Jiu_zixing#Characteristics\" target=\"_blank\" rel=\"noopener noreferrer\">characteristics of modern G-source <span class=\"gothic\">宋体</span></a>, which in turn takes on many features of regular script.</p>\n<p><span class=\"large\"><ruby>𫙹<rp>(</rp><rt>ブリザード</rt><rp>)</rp></ruby></span> is a recently-coined, <span class=\"gothic\">和製漢字</span> with no G-source, even though in theory a G-styled glyph with <span class=\"large mincho bold\" lang=\"zh-Hans\">山</span> instead of <span class=\"large mincho bold\" lang=\"ja\">山</span> could be created (note the boxy protrusion to the bottom left, once again a <span class=\"gothic\">新字形</span> artifact).</p>\n<p><span class=\"large mincho\" lang=\"ja\">払</span>, the <span class=\"gothic\">新字体</span> of <span class=\"large mincho\" lang=\"ja\">拂</span>, is a <a href=\"https://web.archive.org/web/20210408170441/https://c.cidianwang.com/file/kangxi/1555.gif\" target=\"_blank\" rel=\"noopener noreferrer\">variant attested to in the <span class=\"gothic\">康熙字典</span></a>, hence, naturally it has a G-variant too, <span class=\"large mincho\" lang=\"zh-Hans\">払</span>.</p>\n<p>Yet still, there exist Korean-only <span lang=\"ko\" class=\"gothic\">國字</span> which made their way into the PRC's GB standards, e.g. <span class=\"large mincho\" lang=\"zh-Hans\">乻</span> with the first stroke in <span class=\"large mincho\" lang=\"ko\">乻</span> rendered as a <span class=\"large\">丶</span> instead.</p>\n<p>In the absence of a locale-specific glyph, the default name is used. When generating the SC font, the (sole) J-variant is used for <span class=\"large\">𫙹</span>, which makes sense to me since it almost always appears in a Japanese context. The same would apply to non-SC fonts using <span class=\"large\">纷</span>.</p>\n<p>Unfortunately, currently, <a href=\"https://en.glyphwiki.org/wiki/Group:MulticolumnCharts\" target=\"_blank\" rel=\"noopener noreferrer\">locale-specific glyphs for the URO</a> are far from complete. Using <span class=\"large\">諞</span> as an example; as of <a href=\"https://en.glyphwiki.org/wiki/u8ade@7\" target=\"_blank\" rel=\"noopener noreferrer\">April 9, 2021</a> only its G and J-source glyphs are defined. Therefore, in the TC font, <code class=\"language-text\">u8ade</code> uses the <code class=\"language-text\">u8ade-j</code> glyph by default. When invoking the <code class=\"language-text\">locl</code> feature using the TC font, all locales except <code class=\"language-text\">zh-Hans</code> fall back to the <code class=\"language-text\">u8ade-j</code> glyph. <code class=\"language-text\">zh-Hans</code> works properly because there would be a substitution rule which replaces whatever CID <code class=\"language-text\">u8ade</code> points to with <code class=\"language-text\">u8ade-g</code> unconditionally, which exists.</p>\n<p>It is unclear whether, say, <code class=\"language-text\">u8ade &amp;&amp; locl=vi (nonexistent) -&gt; u8ade (nonexistent) -&gt; u8ade-j</code> is a desirable fallback strategy. For one, various Nôm-targeted fonts are based on Song-style glyphs, not least the eponymous <a href=\"http://nomfoundation.org/nom-tools/Nom-Font\" target=\"_blank\" rel=\"noopener noreferrer\"><ruby><rb><span class=\"gothic\">喃</span> </rb><rp>(</rp><rt>nôm</rt><rp>)</rp></ruby><ruby><rb><span class=\"gothic\">那</span></rb><rp>(</rp><rt>na</rt><rp>)</rp></ruby><ruby><rb><span class=\"gothic\">宋</span></rb><rp>(</rp><rt>tống</rt><rp>)</rp></ruby> Light</a> font, which is a V-source Unicode code chart reference font, as well as the <a href=\"http://vietunicode.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">Han Nom fonts</a>, used in the <ruby><rb><span class=\"gothic\">字</span></rb><rt>Từ</rt><rb><span class=\"gothic\">典</span></rb><rt>Điển</rt><rb><span class=\"gothic\">𡨸</span></rb><rt>Chữ</rt><rb><span class=\"gothic\">喃</span></rb> <rt>Nôm</rt><rb><span class=\"gothic\">摘</span></rb> <rt>Trích</rt><rb><span class=\"gothic\">引</span></rb> <rt>Dẫn</rt></ruby>, hence fallback to <em>any</em> of G, T, or even H sources could be desirable.</p>\n<p>Simply leaving those glyphs unpopulated, thus allowing the user to choose a suitable font stack, is another possibility, although the <code class=\"language-text\">locl</code> feature for that codepoint would no longer work because there is no glyph to substitute for anymore!</p>\n<p>Charts showing which locale-specific glyphs are available in the URO and whether they have been added to GlyphWiki are available <a href=\"https://en.glyphwiki.org/wiki/Group:MulticolumnCharts\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<h3>Gothic font is missing lots of strokes!</h3>\n<p>Yes, that's probably why <code class=\"language-text\">kage.kShotai = kage.kGothic</code> isn't documented yet. I'm keeping track of the gothic related issues I've found <a href=\"https://github.com/Radically/HanazonoLite/issues/13\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<h3>Is there any reasoning behind the A, B, C, and D splits?</h3>\n<p>In the CJK fonts, as many of the East Asian-related Unicode blocks are added to the A file as possible to pass <code class=\"language-text\">fc-validate</code> so that there are less catches with <code class=\"language-text\">fontconfig</code> when trying to prioritize it over system fonts. Simply avoid installing the D split if you don't want to use non East Asian glyphs.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ fc-validate -l zh_cn HanaMinLiteCJKATC.otf\nHanaMinLiteCJKATC.otf:0 Satisfy the coverage for zh-cn language\n$ fc-validate -l zh_tw HanaMinLiteCJKATC.otf\nHanaMinLiteCJKATC.otf:0 Satisfy the coverage for zh-tw language\n$ fc-validate -l zh_hk HanaMinLiteCJKATC.otf\nHanaMinLiteCJKATC.otf:0 Missing 121 glyph(s) to satisfy the coverage for zh-hk language\n$ fc-validate -l ja_jp HanaMinLiteCJKATC.otf\nHanaMinLiteCJKATC.otf:0 Satisfy the coverage for ja language\n$ fc-validate -l ko_kr HanaMinLiteCJKATC.otf\nHanaMinLiteCJKATC.otf:0 Satisfy the coverage for ko language</code></pre></div>"}}}